(function(context){'use strict';if(context.define){throw'define is already defined in the global scope, cannot continue';}if(context.require){throw'require is already defined in the global scope, cannot continue';}var mocks={},modules={},definitions={},processing={},arrType=Array,funcType=Function,strType='string',yes=true,nil=null,define,require;function process(id,reqId,optional){var module=modules[id],mock=mocks[id],pid=processing[reqId],dependencies,chain='',x,y,p,moduleDependencies,dependency;if(module){return mock?override(module,mock):module;}if(!pid){pid={length:0};}else if(pid[id]){for(p in pid){if(pid.hasOwnProperty(p)&&p!=='length'){chain+=p+'->';}}throw'circular dependency: '+chain+id;}pid[id]=yes;pid.length+=1;processing[reqId]=pid;module=definitions[id];if(module&&module.def){dependencies=[];if(module.dep instanceof arrType){moduleDependencies=module.dep;for(x=0,y=moduleDependencies.length;x<y;x+=1){dependency=moduleDependencies[x];dependencies[x]=process(dependency.
toString(),reqId,dependency instanceof OptionalModule);}}modules[id]=module=module.def.apply(context,dependencies);}else if(!optional){throw'Module '+id+' is not defined.';}delete definitions[id];delete pid[id];pid.length-=1;if(!pid.length){delete processing[reqId];}return mock?override(module,mock):module;}define=function(id,dependencies,definition,defMock){if(typeof id!==strType){throw"Module id missing or not a string. "+(new Error().stack||'').replace(/\n/g,' / ');}if(!definition&&dependencies){definition=dependencies;dependencies=nil;}if(!definition){throw"Module "+id+" is missing a definition.";}else if(definition instanceof funcType){if(dependencies===nil||dependencies instanceof arrType){if(defMock){mocks[id]=definition();}else{definitions[id]={def:definition,dep:dependencies};}}else{throw'Invalid dependencies for module '+id;}}else{(defMock?mocks:modules)[id]=definition;}};define.mock=function(id,definition){define(id,nil,definition,yes);};define.amd={jQuery:yes};require=
function(ids,callback,errHandler){if(ids instanceof arrType&&callback instanceof funcType){setTimeout(function(){try{var reqId=Math.random(),m=[],x,y;for(x=0,y=ids.length;x<y;x+=1){var module=ids[x];m[x]=process(module.toString(),reqId,module instanceof OptionalModule);}callback.apply(context,m);}catch(err){if(errHandler instanceof funcType){errHandler.call(context,err);}else{throw err;}}},0);}else{throw'Invalid require call - ids: '+JSON.stringify(ids);}};var OptionalModule=function(id){this.id=id;};OptionalModule.prototype.toString=function(){return this.id;};require.optional=function(id){return new OptionalModule(id);};function override(module,mock){for(var p in mock){if(mock.hasOwnProperty(p)&&module.hasOwnProperty(p))module[p]=mock[p];}return module;}context.require=require;context.define=define;}(this));;(function(window){'use strict';var Wikia=window.Wikia||{};function tracker(){var actions={ADD:'add',CLICK:'click',CLICK_LINK_BUTTON:'click-link-button',CLICK_LINK_IMAGE:
'click-link-image',CLICK_LINK_TEXT:'click-link-text',CLOSE:'close',CONFIRM:'confirm',DISABLE:'disable',ENABLE:'enable',ERROR:'error',HOVER:'hover',IMPRESSION:'impression',KEYPRESS:'keypress',PLAY_VIDEO:'play-video',REMOVE:'remove',OPEN:'open',PAGINATE:'paginate',SHARE:'share',SUBMIT:'submit',SUCCESS:'success',SWIPE:'swipe',TAKE_SURVEY:'take-survey',VIEW:'view'},actionsReverse=(function(){var obj={},key;for(key in actions){obj[actions[key]]=key;}return obj;})(),spool=[],slice=spool.slice;function track(){spool.push(slice.call(arguments));}function buildTrackingFunction(){var args=slice.call(arguments),trackingFunction=typeof args[0]==='function'&&args.shift();return function(){var track=trackingFunction||Wikia.Tracker.track;return track.apply(track,args.concat(slice.call(arguments)));};}return{ACTIONS:actions,ACTIONS_REVERSE:actionsReverse,buildTrackingFunction:buildTrackingFunction,spool:spool,track:track};}window.Wikia=Wikia||{};window.Wikia.Tracker=tracker(window);if(window.define&&
window.define.amd){window.define('wikia.tracker',function(){return Wikia.Tracker;});}})(window,undefined);function veTrack(data){if(!window.syslogReport){return;}var defaultData={},uri,finalData;try{try{defaultData.isAnonymous=!wgUserName?'yes':'no';}catch(e){defaultData.isAnonymous='unknown';}try{uri=new mw.Uri(location.href);defaultData.isRedlink=!!uri.query.redlink?'yes':'no';}catch(e){defaultData.isRedlink='unknown';}defaultData.referrer=document.referrer;try{defaultData.contentLanguage=mw.config.get('wgContentLanguage');}catch(e){defaultData.contentLanguage='unknown';}try{defaultData.userLanguage=mw.config.get('wgUserLanguage');}catch(e){defaultData.userLanguage='unknown';}if(window.veOrientationEnabled===undefined){defaultData.orientationEnabled='unknown';}else{defaultData.orientationEnabled=!!window.veOrientationEnabled?'yes':'no';}if(window.anoneditwarning===undefined){defaultData.anonEditWarning='unknown';}else{defaultData.anonEditWarning=!!window.anoneditwarning?'yes':'no';}
finalData=$.extend({},defaultData,data);}catch(e){finalData={failed:true};}syslogReport(6,'veTrack-v5',finalData);};define('wikia.instantGlobals',['wikia.window'],function(window){'use strict';if(window.Wikia&&window.Wikia.InstantGlobals){return window.Wikia.InstantGlobals;}return{};});;(function(context){'use strict';function cookies(window){var cookieReplaceRegEx1=/^\s*/,cookieReplaceRegEx2=/\s*$/,lastCookieContent,data;function fetchCookies(){var cookieString=window.document.cookie,pair,name,value,separated,i,m;if(lastCookieContent!==cookieString){data={};lastCookieContent=cookieString;separated=cookieString.split(';');for(i=0,m=separated.length;i<m;i+=1){pair=separated[i].split('=');name=pair[0].replace(cookieReplaceRegEx1,'').replace(cookieReplaceRegEx2,'');value=decodeURIComponent(pair[1]);data[name]=value;}}return data;}function get(name){var val=fetchCookies()[name];return(typeof val!=='undefined')?val:null;}function set(name,value,options){var expDate,cookieString,data=[],x,y;
options=options||{};if(typeof value==='undefined'||value===null){value='';options.expires=-1;}if(options.expires){if(typeof options.expires==='number'){expDate=new Date();expDate.setTime(expDate.getTime()+(options.expires));}else if(options.expires instanceof Date){expDate=options.expires;}data.push('; expires='+expDate.toUTCString());}if(options.path){data.push('; path='+options.path);}if(options.domain){data.push('; domain='+options.domain);}if(options.secure){data.push('; secure');}cookieString=name+'='+encodeURIComponent(value);for(x=0,y=data.length;x<y;x+=1){cookieString+=data[x];}window.document.cookie=cookieString;return cookieString;}return{get:get,set:set};}if(!context.Wikia){context.Wikia={};}context.Wikia.Cookies=cookies(context);if(context.define&&context.define.amd){context.define('wikia.cookies',['wikia.window'],cookies);}}(this));;(function(context){'use strict';function geo(cookies){var cookieName='Geo',geoData=false;function getGeoData(){if(geoData===false){var jsonData
=decodeURIComponent(cookies.get(cookieName));try{geoData=JSON.parse(jsonData)||{};}catch(e){geoData={};}}return geoData;}function getCountryCode(){var data=getGeoData();return data.country;}function getContinentCode(){var data=getGeoData();return data.continent;}return{getGeoData:getGeoData,getCountryCode:getCountryCode,getContinentCode:getContinentCode};}if(context.Wikia){context.Geo=context.Wikia.geo=geo(context.Wikia.Cookies);}if(context.define&&context.define.amd){context.define('wikia.geo',['wikia.cookies'],geo);}}(this));;define('wikia.window',function(){'use strict';return window;});;mw.loader.state({"amd":"ready","wikia.tracker.stub":"ready","wikia.instantGlobals":"ready","wikia.cookies":"ready","wikia.geo":"ready","wikia.window":"ready"});

/* cache key: slot1:resourceloader:filter:minify-js:7:a52aed22112fb942eafd935830a79463 */